#!/bin/bash

usage() {
cat << EOF  
update - First gets an updated list of apt package versions and then
         does a full upgrade of each package to its latest version.

         It then updates all the Toolbag scripts. 
		 If used with the toolbag parameter (e.g. 'update toolbag'), 
		 then it just updates the Toolbag scripts and binaries. 
		 
		 It invokes sudo itself (as needed).
EOF
}

while getopts h flag
do
    if [ ${flag} == "h" ]; then 
    	usage
		exit
    fi
done

version=$(toolbag)

if [ "$1" == "toolbag" ]; then
	echo "Just updating toolbag scripts"
	if [ "$2" != "" ]; then
		version="$2"
	fi		
elif [ -x "$(command -v apt)" ]; then
	sudo apt update
	sudo apt full-upgrade -y
	sudo apt autoremove   # remove no longer needed dependencies
	sudo apt autoclean    # removes packages that can no longer be downloaded
	if [ "$1" != "" ]; then
		version="$1"
	fi		
fi

if   [ ! -x "$(command -v wget)" ]; then
	echo "Cannot update Toolbag components, wget is not available" 	
elif [ ! -x "$(command -v tar)" ]; then
	echo "Cannot update Toolbag components, tar is not available" 	
else

	mkdir ~/temp	
	cd ~/temp 
	
	destbin=/usr/local/bin
	source="https://github.com/julianpratt/Toolbag/releases/download/$version" 
	
	# Install scripts   	
	wget $source/scripts.tar.gz
	tar xvzf scripts.tar.gz
	rm scripts.tar.gz
	chmod 777 *	# scripts, etc come down from github without the execute permission set 
	sudo chown root:root * 
	sudo mv * $destbin
	
	# Clean up
	cd ~
	sudo rm -rf ~/temp
	
fi    
